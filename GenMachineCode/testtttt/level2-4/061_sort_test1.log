typecheck fin
program
    DeclStmt
    DefNode	Variable	NonArray
        Id	name: @n	scope: 0	type: i32	size: 4
        This variable/constant is not assigned
    FunctionDefine function name: @bubblesort, type: i32
        FuncDefParamsNode
            Id	name: %arr	scope: 1	type: int array	size: 4
                ArrayDimensions
                ArrDim
                    IntegerLiteral	value: -1	type: i32
        CompoundStmt
            DeclStmt
            DefNode	Variable	NonArray
                Id	name: i	scope: 2	type: i32	size: 4
                This variable/constant is not assigned
            DeclStmt
            DefNode	Variable	NonArray
                Id	name: j	scope: 2	type: i32	size: 4
                This variable/constant is not assigned
            AssignStmt
                Id	name: i	scope: 2	type: i32	size: 4
                IntegerLiteral	value: 0	type: i32
            WhileStmt
                BinaryExpr	op: less     type:i1
                    Id	name: i	scope: 2	type: i32	size: 4
                    BinaryExpr	op: sub     type:i32
                        Id	name: @n	scope: 0	type: i32	size: 4
                        IntegerLiteral	value: 1	type: i32
                CompoundStmt
                    AssignStmt
                        Id	name: j	scope: 2	type: i32	size: 4
                        IntegerLiteral	value: 0	type: i32
                    WhileStmt
                        BinaryExpr	op: less     type:i1
                            Id	name: j	scope: 2	type: i32	size: 4
                            BinaryExpr	op: sub     type:i32
                                BinaryExpr	op: sub     type:i32
                                    Id	name: @n	scope: 0	type: i32	size: 4
                                    Id	name: i	scope: 2	type: i32	size: 4
                                IntegerLiteral	value: 1	type: i32
                        CompoundStmt
                            IfStmt
                                BinaryExpr	op: great     type:i1
                                    Id	name: %arr	scope: 1	type: int array	size: 4
                                        ArrayDimensions
                                        ArrDim
                                            Id	name: j	scope: 2	type: i32	size: 4
                                    Id	name: %arr	scope: 1	type: int array	size: 4
                                        ArrayDimensions
                                        ArrDim
                                            BinaryExpr	op: add     type:i32
                                                Id	name: j	scope: 2	type: i32	size: 4
                                                IntegerLiteral	value: 1	type: i32
                                CompoundStmt
                                    DeclStmt
                                    DefNode	Variable	NonArray
                                        Id	name: tmp	scope: 5	type: i32	size: 4
                                        This variable/constant is not assigned
                                    AssignStmt
                                        Id	name: tmp	scope: 5	type: i32	size: 4
                                        Id	name: %arr	scope: 1	type: int array	size: 4
                                            ArrayDimensions
                                            ArrDim
                                                BinaryExpr	op: add     type:i32
                                                    Id	name: j	scope: 2	type: i32	size: 4
                                                    IntegerLiteral	value: 1	type: i32
                                    AssignStmt
                                        Id	name: %arr	scope: 1	type: int array	size: 4
                                            ArrayDimensions
                                            ArrDim
                                                BinaryExpr	op: add     type:i32
                                                    Id	name: j	scope: 2	type: i32	size: 4
                                                    IntegerLiteral	value: 1	type: i32
                                        Id	name: %arr	scope: 1	type: int array	size: 4
                                            ArrayDimensions
                                            ArrDim
                                                Id	name: j	scope: 2	type: i32	size: 4
                                    AssignStmt
                                        Id	name: %arr	scope: 1	type: int array	size: 4
                                            ArrayDimensions
                                            ArrDim
                                                Id	name: j	scope: 2	type: i32	size: 4
                                        Id	name: tmp	scope: 5	type: i32	size: 4
                            AssignStmt
                                Id	name: j	scope: 2	type: i32	size: 4
                                BinaryExpr	op: add     type:i32
                                    Id	name: j	scope: 2	type: i32	size: 4
                                    IntegerLiteral	value: 1	type: i32
                    AssignStmt
                        Id	name: i	scope: 2	type: i32	size: 4
                        BinaryExpr	op: add     type:i32
                            Id	name: i	scope: 2	type: i32	size: 4
                            IntegerLiteral	value: 1	type: i32
            ReturnStmt
                IntegerLiteral	value: 0	type: i32
    FunctionDefine function name: @main, type: i32
        FuncDefParamsNode NULL
        CompoundStmt
            AssignStmt
                Id	name: @n	scope: 0	type: i32	size: 4
                IntegerLiteral	value: 10	type: i32
            DeclStmt
            DefNode	Variable	Array
                Id	name: a	scope: 2	type: int array	size: 40
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 10	type: i32
                This variable/constant is not assigned
            AssignStmt
                Id	name: a	scope: 2	type: int array	size: 40
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 0	type: i32
                IntegerLiteral	value: 4	type: i32
            AssignStmt
                Id	name: a	scope: 2	type: int array	size: 40
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 1	type: i32
                IntegerLiteral	value: 3	type: i32
            AssignStmt
                Id	name: a	scope: 2	type: int array	size: 40
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 2	type: i32
                IntegerLiteral	value: 9	type: i32
            AssignStmt
                Id	name: a	scope: 2	type: int array	size: 40
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 3	type: i32
                IntegerLiteral	value: 2	type: i32
            AssignStmt
                Id	name: a	scope: 2	type: int array	size: 40
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 4	type: i32
                IntegerLiteral	value: 0	type: i32
            AssignStmt
                Id	name: a	scope: 2	type: int array	size: 40
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 5	type: i32
                IntegerLiteral	value: 1	type: i32
            AssignStmt
                Id	name: a	scope: 2	type: int array	size: 40
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 6	type: i32
                IntegerLiteral	value: 6	type: i32
            AssignStmt
                Id	name: a	scope: 2	type: int array	size: 40
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 7	type: i32
                IntegerLiteral	value: 5	type: i32
            AssignStmt
                Id	name: a	scope: 2	type: int array	size: 40
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 8	type: i32
                IntegerLiteral	value: 7	type: i32
            AssignStmt
                Id	name: a	scope: 2	type: int array	size: 40
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 9	type: i32
                IntegerLiteral	value: 8	type: i32
            DeclStmt
            DefNode	Variable	NonArray
                Id	name: i	scope: 2	type: i32	size: 4
                This variable/constant is not assigned
            AssignStmt
                Id	name: i	scope: 2	type: i32	size: 4
                FuncCallNode	funcName: @bubblesort	 funcType: i32	scope: 0
                    FuncCallParamsNode
                        Id	name: a	scope: 2	type: int array	size: 40
            WhileStmt
                BinaryExpr	op: less     type:i1
                    Id	name: i	scope: 2	type: i32	size: 4
                    Id	name: @n	scope: 0	type: i32	size: 4
                CompoundStmt
                    DeclStmt
                    DefNode	Variable	NonArray
                        Id	name: tmp	scope: 3	type: i32	size: 4
                        This variable/constant is not assigned
                    AssignStmt
                        Id	name: tmp	scope: 3	type: i32	size: 4
                        Id	name: a	scope: 2	type: int array	size: 40
                            ArrayDimensions
                            ArrDim
                                Id	name: i	scope: 2	type: i32	size: 4
                    ExprStmtNode
                        FuncCallNode	funcName: @putint	 funcType: void	scope: 0
                            FuncCallParamsNode
                                Id	name: tmp	scope: 3	type: i32	size: 4
                    AssignStmt
                        Id	name: tmp	scope: 3	type: i32	size: 4
                        IntegerLiteral	value: 10	type: i32
                    ExprStmtNode
                        FuncCallNode	funcName: @putch	 funcType: void	scope: 0
                            FuncCallParamsNode
                                Id	name: tmp	scope: 3	type: i32	size: 4
                    AssignStmt
                        Id	name: i	scope: 2	type: i32	size: 4
                        BinaryExpr	op: add     type:i32
                            Id	name: i	scope: 2	type: i32	size: 4
                            IntegerLiteral	value: 1	type: i32
            ReturnStmt
                IntegerLiteral	value: 0	type: i32
DeclStmt::genCode
DeclStmt::genCode
DeclStmt::genCode
AssignStmt::genCode
WhileStmt::genCode
AssignStmt::genCode
WhileStmt::genCode
Id::ArrgenCode
Id::ArrgenCode
DeclStmt::genCode
AssignStmt::genCode
Id::ArrgenCode
AssignStmt::genCode
Id::ArrgenCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
ReturnStmt::genCode
AssignStmt::genCode
DeclStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
DeclStmt::genCode
AssignStmt::genCode
Id::ArrgenCode
callParams[0]->getexprkind() == ExprNode::CONSTANT  is 0
WhileStmt::genCode
DeclStmt::genCode
AssignStmt::genCode
Id::ArrgenCode
callParams[0]->getexprkind() == ExprNode::CONSTANT  is 0
AssignStmt::genCode
callParams[0]->getexprkind() == ExprNode::CONSTANT  is 0
AssignStmt::genCode
ReturnStmt::genCode
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode1
StoreInstruction::genMachineCode  end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
CmpInstruction::genMachineCode
CmpInstruction::genMachineCode end
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
RetInstruction::genMachineCode
RetInstruction::genMachineCode end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
CmpInstruction::genMachineCode
CmpInstruction::genMachineCode end
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
CmpInstruction::genMachineCode
CmpInstruction::genMachineCode end
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
CallInstruction::genMachineCode
CallInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
CmpInstruction::genMachineCode
CmpInstruction::genMachineCode end
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode7
LoadInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
CallInstruction::genMachineCode
CallInstruction::genMachineCode int
CallInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
CallInstruction::genMachineCode
CallInstruction::genMachineCode int
CallInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
RetInstruction::genMachineCode
RetInstruction::genMachineCode end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
	.arch armv8-a
	.fpu vfpv3-d16
	.arch_extension crc
	.arm
	.data
	.global n
	.align 4
	.size n, 4
n:
	.word 0
	.text
	.global bubblesort
	.type bubblesort , %function
bubblesort:
	push {r6, r7, r8, r9, r10, fp, lr}
	mov fp, sp
BinaryMInstruction::output() 
	sub sp, sp, #16
.L16:
	str r0, [fp, #-16]
	ldr r10, =0
	str r10, [fp, #-12]
	b .L20
.L20:
	ldr r10, [fp, #-12]
	ldr r9, addr__0
	ldr r8, [r9]
BinaryMInstruction::output() 
	sub r9, r8, #1
	cmp r10, r9
	movlt r10, #1
	movge r10, #0
	blt .L21
	b .L26
.L21:
	ldr r10, =0
	str r10, [fp, #-8]
	b .L28
.L22:
	ldr r10, =0
	mov r0, r10
	b .Lbubblesort_END
.L25:
.L26:
	b .L22
.L27:
.L28:
	ldr r10, [fp, #-8]
	ldr r9, addr__0
	ldr r8, [r9]
	ldr r9, [fp, #-12]
BinaryMInstruction::output() 
	sub r7, r8, r9
BinaryMInstruction::output() 
	sub r9, r7, #1
	cmp r10, r9
	movlt r10, #1
	movge r10, #0
	blt .L29
	b .L35
.L29:
	ldr r10, [fp, #-8]
	ldr r9, [fp, #-16]
	ldr r8, =4
BinaryMInstruction::output() 
	mul r7, r10, r8
BinaryMInstruction::output() 
	add r10, r7, r9
	ldr r9, [r10]
	ldr r10, [fp, #-8]
BinaryMInstruction::output() 
	add r8, r10, #1
	ldr r10, [fp, #-16]
	ldr r7, =4
BinaryMInstruction::output() 
	mul r6, r8, r7
BinaryMInstruction::output() 
	add r8, r6, r10
	ldr r10, [r8]
	cmp r9, r10
	movgt r10, #1
	movle r10, #0
	bgt .L37
	b .L50
.L30:
	ldr r10, [fp, #-12]
BinaryMInstruction::output() 
	add r9, r10, #1
	str r9, [fp, #-12]
	b .L20
.L34:
.L35:
	b .L30
.L36:
.L37:
	ldr r10, [fp, #-8]
BinaryMInstruction::output() 
	add r9, r10, #1
	ldr r10, [fp, #-16]
	ldr r8, =4
BinaryMInstruction::output() 
	mul r7, r9, r8
BinaryMInstruction::output() 
	add r9, r7, r10
	ldr r10, [r9]
	str r10, [fp, #-4]
	ldr r10, [fp, #-8]
	ldr r9, [fp, #-16]
	ldr r8, =4
BinaryMInstruction::output() 
	mul r7, r10, r8
BinaryMInstruction::output() 
	add r10, r7, r9
	ldr r9, [r10]
	ldr r10, [fp, #-8]
BinaryMInstruction::output() 
	add r8, r10, #1
	ldr r10, [fp, #-16]
	ldr r7, =4
BinaryMInstruction::output() 
	mul r6, r8, r7
BinaryMInstruction::output() 
	add r8, r6, r10
	str r9, [r8]
	ldr r10, [fp, #-4]
	ldr r9, [fp, #-8]
	ldr r8, [fp, #-16]
	ldr r7, =4
BinaryMInstruction::output() 
	mul r6, r9, r7
BinaryMInstruction::output() 
	add r9, r6, r8
	str r10, [r9]
	b .L38
.L38:
	ldr r10, [fp, #-8]
BinaryMInstruction::output() 
	add r9, r10, #1
	str r9, [fp, #-8]
	b .L28
.L49:
.L50:
	b .L38
.L51:
.Lbubblesort_END:
BinaryMInstruction::output() 
	add sp, sp, #16
	pop {r6, r7, r8, r9, r10, fp, lr}
	bx  lr

	.global main
	.type main , %function
main:
	push {r8, r9, r10, fp, lr}
	mov fp, sp
BinaryMInstruction::output() 
	sub sp, sp, #48
.L74:
	ldr r10, =10
	ldr r9, addr__0
	str r10, [r9]
	ldr r10, =0
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-48
	ldr r9, =4
BinaryMInstruction::output() 
	add r8, fp, r10
	str r9, [r8]
	ldr r10, =1
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-48
	ldr r9, =3
BinaryMInstruction::output() 
	add r8, fp, r10
	str r9, [r8]
	ldr r10, =2
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-48
	ldr r9, =9
BinaryMInstruction::output() 
	add r8, fp, r10
	str r9, [r8]
	ldr r10, =3
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-48
	ldr r9, =2
BinaryMInstruction::output() 
	add r8, fp, r10
	str r9, [r8]
	ldr r10, =4
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-48
	ldr r9, =0
BinaryMInstruction::output() 
	add r8, fp, r10
	str r9, [r8]
	ldr r10, =5
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-48
	ldr r9, =1
BinaryMInstruction::output() 
	add r8, fp, r10
	str r9, [r8]
	ldr r10, =6
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-48
	ldr r9, =6
BinaryMInstruction::output() 
	add r8, fp, r10
	str r9, [r8]
	ldr r10, =7
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-48
	ldr r9, =5
BinaryMInstruction::output() 
	add r8, fp, r10
	str r9, [r8]
	ldr r10, =8
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-48
	ldr r9, =7
BinaryMInstruction::output() 
	add r8, fp, r10
	str r9, [r8]
	ldr r10, =9
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-48
	ldr r9, =8
BinaryMInstruction::output() 
	add r8, fp, r10
	str r9, [r8]
	ldr r10, =0
BinaryMInstruction::output() 
	add r9, r10, #-48
BinaryMInstruction::output() 
	add r10, fp, r9
	mov r0, r10
	bl  bubblesort
	mov r10, r0
	str r10, [fp, #-8]
	b .L99
.L99:
	ldr r10, [fp, #-8]
	ldr r9, addr__0
	ldr r8, [r9]
	cmp r10, r8
	movlt r10, #1
	movge r10, #0
	blt .L100
	b .L105
.L100:
	ldr r10, [fp, #-8]
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-48
BinaryMInstruction::output() 
	add r9, fp, r10
	ldr r10, [r9]
	str r10, [fp, #-4]
	ldr r10, [fp, #-4]
	mov r0, r10
	bl  putint
	ldr r10, =10
	str r10, [fp, #-4]
	ldr r10, [fp, #-4]
	mov r0, r10
	bl  putch
	ldr r10, [fp, #-8]
BinaryMInstruction::output() 
	add r9, r10, #1
	str r9, [fp, #-8]
	b .L99
.L101:
	ldr r10, =0
	mov r0, r10
	b .Lmain_END
.L104:
.L105:
	b .L101
.L106:
.Lmain_END:
BinaryMInstruction::output() 
	add sp, sp, #48
	pop {r8, r9, r10, fp, lr}
	bx  lr

addr_n_0:
	.word n
TOTAL: 0H-0M-0S-0us
