










































typecheck fin
program
    DeclStmt
    DefNode	Const	NonArray
        Id	name: 20	scope: 0	type: i32	size: 4
        IntegerLiteral	value: 20	type: i32
    FunctionDefine function name: @main, type: i32
        FuncDefParamsNode NULL
        CompoundStmt
            DeclStmt
            DefNode	Variable	NonArray
                Id	name: i	scope: 2	type: i32	size: 4
                This variable/constant is not assigned
            DefNode	Variable	NonArray
                Id	name: j	scope: 2	type: i32	size: 4
                This variable/constant is not assigned
            DefNode	Variable	NonArray
                Id	name: t	scope: 2	type: i32	size: 4
                This variable/constant is not assigned
            DefNode	Variable	NonArray
                Id	name: n	scope: 2	type: i32	size: 4
                This variable/constant is not assigned
            DefNode	Variable	NonArray
                Id	name: temp	scope: 2	type: i32	size: 4
                This variable/constant is not assigned
            DeclStmt
            DefNode	Variable	Array
                Id	name: mult1	scope: 2	type: int array	size: 80
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 20	type: i32
                ArrValNode	Variable	ValList
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 1	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 2	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 3	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 4	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 5	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 6	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 7	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 8	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 9	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 1	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 2	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 3	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 4	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 5	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 6	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 7	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 8	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 9	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
            DeclStmt
            DefNode	Variable	Array
                Id	name: mult2	scope: 2	type: int array	size: 80
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 20	type: i32
                ArrValNode	Variable	ValList
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 2	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 3	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 4	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 2	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 5	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 7	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 9	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 9	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 1	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 9	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 8	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 7	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 6	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 4	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 3	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 2	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 1	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 2	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 2	type: i32
            DeclStmt
            DefNode	Variable	NonArray
                Id	name: len1	scope: 2	type: i32	size: 4
                IntegerLiteral	value: 20	type: i32
            DeclStmt
            DefNode	Variable	NonArray
                Id	name: len2	scope: 2	type: i32	size: 4
                IntegerLiteral	value: 20	type: i32
            DeclStmt
            DefNode	Variable	Array
                Id	name: c1	scope: 2	type: int array	size: 100
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 25	type: i32
                This variable/constant is not assigned
            DeclStmt
            DefNode	Variable	Array
                Id	name: c2	scope: 2	type: int array	size: 100
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 25	type: i32
                This variable/constant is not assigned
            DeclStmt
            DefNode	Variable	Array
                Id	name: result	scope: 2	type: int array	size: 160
                    ArrayDimensions
                    ArrDim
                        IntegerLiteral	value: 40	type: i32
                ArrValNode	Variable	ValList
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
                    ArrValNode	Variable	Expr
                        IntegerLiteral	value: 0	type: i32
            AssignStmt
                Id	name: i	scope: 2	type: i32	size: 4
                IntegerLiteral	value: 0	type: i32
            WhileStmt
                BinaryExpr	op: less     type:i1
                    Id	name: i	scope: 2	type: i32	size: 4
                    Id	name: len1	scope: 2	type: i32	size: 4
                CompoundStmt
                    AssignStmt
                        Id	name: c1	scope: 2	type: int array	size: 100
                            ArrayDimensions
                            ArrDim
                                Id	name: i	scope: 2	type: i32	size: 4
                        Id	name: mult1	scope: 2	type: int array	size: 80
                            ArrayDimensions
                            ArrDim
                                Id	name: i	scope: 2	type: i32	size: 4
                    AssignStmt
                        Id	name: i	scope: 2	type: i32	size: 4
                        BinaryExpr	op: add     type:i32
                            Id	name: i	scope: 2	type: i32	size: 4
                            IntegerLiteral	value: 1	type: i32
            AssignStmt
                Id	name: i	scope: 2	type: i32	size: 4
                IntegerLiteral	value: 0	type: i32
            WhileStmt
                BinaryExpr	op: less     type:i1
                    Id	name: i	scope: 2	type: i32	size: 4
                    Id	name: len2	scope: 2	type: i32	size: 4
                CompoundStmt
                    AssignStmt
                        Id	name: c2	scope: 2	type: int array	size: 100
                            ArrayDimensions
                            ArrDim
                                Id	name: i	scope: 2	type: i32	size: 4
                        Id	name: mult2	scope: 2	type: int array	size: 80
                            ArrayDimensions
                            ArrDim
                                Id	name: i	scope: 2	type: i32	size: 4
                    AssignStmt
                        Id	name: i	scope: 2	type: i32	size: 4
                        BinaryExpr	op: add     type:i32
                            Id	name: i	scope: 2	type: i32	size: 4
                            IntegerLiteral	value: 1	type: i32
            AssignStmt
                Id	name: n	scope: 2	type: i32	size: 4
                BinaryExpr	op: sub     type:i32
                    BinaryExpr	op: add     type:i32
                        Id	name: len1	scope: 2	type: i32	size: 4
                        Id	name: len2	scope: 2	type: i32	size: 4
                    IntegerLiteral	value: 1	type: i32
            AssignStmt
                Id	name: i	scope: 2	type: i32	size: 4
                IntegerLiteral	value: 0	type: i32
            WhileStmt
                BinaryExpr	op: lesseq     type:i1
                    Id	name: i	scope: 2	type: i32	size: 4
                    Id	name: n	scope: 2	type: i32	size: 4
                CompoundStmt
                    AssignStmt
                        Id	name: result	scope: 2	type: int array	size: 160
                            ArrayDimensions
                            ArrDim
                                Id	name: i	scope: 2	type: i32	size: 4
                        IntegerLiteral	value: 0	type: i32
                    AssignStmt
                        Id	name: i	scope: 2	type: i32	size: 4
                        BinaryExpr	op: add     type:i32
                            Id	name: i	scope: 2	type: i32	size: 4
                            IntegerLiteral	value: 1	type: i32
            AssignStmt
                Id	name: temp	scope: 2	type: i32	size: 4
                IntegerLiteral	value: 0	type: i32
            AssignStmt
                Id	name: i	scope: 2	type: i32	size: 4
                BinaryExpr	op: sub     type:i32
                    Id	name: len2	scope: 2	type: i32	size: 4
                    IntegerLiteral	value: 1	type: i32
            WhileStmt
                BinaryExpr	op: great     type:i1
                    Id	name: i	scope: 2	type: i32	size: 4
                    IntegerLiteral	value: -1	type: i32
                CompoundStmt
                    AssignStmt
                        Id	name: t	scope: 2	type: i32	size: 4
                        Id	name: c2	scope: 2	type: int array	size: 100
                            ArrayDimensions
                            ArrDim
                                Id	name: i	scope: 2	type: i32	size: 4
                    AssignStmt
                        Id	name: j	scope: 2	type: i32	size: 4
                        BinaryExpr	op: sub     type:i32
                            Id	name: len1	scope: 2	type: i32	size: 4
                            IntegerLiteral	value: 1	type: i32
                    WhileStmt
                        BinaryExpr	op: great     type:i1
                            Id	name: j	scope: 2	type: i32	size: 4
                            IntegerLiteral	value: -1	type: i32
                        CompoundStmt
                            AssignStmt
                                Id	name: temp	scope: 2	type: i32	size: 4
                                BinaryExpr	op: add     type:i32
                                    Id	name: result	scope: 2	type: int array	size: 160
                                        ArrayDimensions
                                        ArrDim
                                            Id	name: n	scope: 2	type: i32	size: 4
                                    BinaryExpr	op: mul     type:i32
                                        Id	name: t	scope: 2	type: i32	size: 4
                                        Id	name: c1	scope: 2	type: int array	size: 100
                                            ArrayDimensions
                                            ArrDim
                                                Id	name: j	scope: 2	type: i32	size: 4
                            IfElseStmt
                                BinaryExpr	op: greateq     type:i1
                                    Id	name: temp	scope: 2	type: i32	size: 4
                                    IntegerLiteral	value: 10	type: i32
                                CompoundStmt
                                    AssignStmt
                                        Id	name: result	scope: 2	type: int array	size: 160
                                            ArrayDimensions
                                            ArrDim
                                                Id	name: n	scope: 2	type: i32	size: 4
                                        Id	name: temp	scope: 2	type: i32	size: 4
                                    AssignStmt
                                        Id	name: result	scope: 2	type: int array	size: 160
                                            ArrayDimensions
                                            ArrDim
                                                BinaryExpr	op: sub     type:i32
                                                    Id	name: n	scope: 2	type: i32	size: 4
                                                    IntegerLiteral	value: 1	type: i32
                                        BinaryExpr	op: add     type:i32
                                            Id	name: result	scope: 2	type: int array	size: 160
                                                ArrayDimensions
                                                ArrDim
                                                    BinaryExpr	op: sub     type:i32
                                                        Id	name: n	scope: 2	type: i32	size: 4
                                                        IntegerLiteral	value: 1	type: i32
                                            BinaryExpr	op: div     type:i32
                                                Id	name: temp	scope: 2	type: i32	size: 4
                                                IntegerLiteral	value: 10	type: i32
                                AssignStmt
                                    Id	name: result	scope: 2	type: int array	size: 160
                                        ArrayDimensions
                                        ArrDim
                                            Id	name: n	scope: 2	type: i32	size: 4
                                    Id	name: temp	scope: 2	type: i32	size: 4
                            AssignStmt
                                Id	name: j	scope: 2	type: i32	size: 4
                                BinaryExpr	op: sub     type:i32
                                    Id	name: j	scope: 2	type: i32	size: 4
                                    IntegerLiteral	value: 1	type: i32
                            AssignStmt
                                Id	name: n	scope: 2	type: i32	size: 4
                                BinaryExpr	op: sub     type:i32
                                    Id	name: n	scope: 2	type: i32	size: 4
                                    IntegerLiteral	value: 1	type: i32
                    AssignStmt
                        Id	name: n	scope: 2	type: i32	size: 4
                        BinaryExpr	op: sub     type:i32
                            BinaryExpr	op: add     type:i32
                                Id	name: n	scope: 2	type: i32	size: 4
                                Id	name: len1	scope: 2	type: i32	size: 4
                            IntegerLiteral	value: 1	type: i32
                    AssignStmt
                        Id	name: i	scope: 2	type: i32	size: 4
                        BinaryExpr	op: sub     type:i32
                            Id	name: i	scope: 2	type: i32	size: 4
                            IntegerLiteral	value: 1	type: i32
            IfStmt
                BinaryExpr	op: neq     type:i1
                    Id	name: result	scope: 2	type: int array	size: 160
                        ArrayDimensions
                        ArrDim
                            IntegerLiteral	value: 0	type: i32
                    IntegerLiteral	value: 0	type: i32
                ExprStmtNode
                    FuncCallNode	funcName: @putint	 funcType: void	scope: 0
                        FuncCallParamsNode
                            Id	name: result	scope: 2	type: int array	size: 160
                                ArrayDimensions
                                ArrDim
                                    IntegerLiteral	value: 0	type: i32
            AssignStmt
                Id	name: i	scope: 2	type: i32	size: 4
                IntegerLiteral	value: 1	type: i32
            WhileStmt
                BinaryExpr	op: lesseq     type:i1
                    Id	name: i	scope: 2	type: i32	size: 4
                    BinaryExpr	op: sub     type:i32
                        BinaryExpr	op: add     type:i32
                            Id	name: len1	scope: 2	type: i32	size: 4
                            Id	name: len2	scope: 2	type: i32	size: 4
                        IntegerLiteral	value: 1	type: i32
                CompoundStmt
                    ExprStmtNode
                        FuncCallNode	funcName: @putint	 funcType: void	scope: 0
                            FuncCallParamsNode
                                Id	name: result	scope: 2	type: int array	size: 160
                                    ArrayDimensions
                                    ArrDim
                                        Id	name: i	scope: 2	type: i32	size: 4
                    AssignStmt
                        Id	name: i	scope: 2	type: i32	size: 4
                        BinaryExpr	op: add     type:i32
                            Id	name: i	scope: 2	type: i32	size: 4
                            IntegerLiteral	value: 1	type: i32
            ReturnStmt
                IntegerLiteral	value: 0	type: i32
DeclStmt::genCode
new StoreInstruction src:1015989920
DeclStmt::genCode
DeclStmt::genCode
DeclStmt::genCode
DeclStmt::genCode
new StoreInstruction src:1015989920
DeclStmt::genCode
new StoreInstruction src:1015989920
DeclStmt::genCode
DeclStmt::genCode
DeclStmt::genCode
AssignStmt::genCode
WhileStmt::genCode
AssignStmt::genCode
Id::ArrgenCode
AssignStmt::genCode
AssignStmt::genCode
WhileStmt::genCode
AssignStmt::genCode
Id::ArrgenCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
WhileStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
WhileStmt::genCode
AssignStmt::genCode
Id::ArrgenCode
AssignStmt::genCode
WhileStmt::genCode
AssignStmt::genCode
Id::ArrgenCode
Id::ArrgenCode
AssignStmt::genCode
AssignStmt::genCode
Id::ArrgenCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
AssignStmt::genCode
Id::ArrgenCode
Id::ArrgenCode
callParams[0]->getexprkind() == ExprNode::CONSTANT  is 0
AssignStmt::genCode
WhileStmt::genCode
Id::ArrgenCode
callParams[0]->getexprkind() == ExprNode::CONSTANT  is 0
AssignStmt::genCode
ReturnStmt::genCode
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
CmpInstruction::genMachineCode
CmpInstruction::genMachineCode end
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode7
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
CmpInstruction::genMachineCode
CmpInstruction::genMachineCode end
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode7
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
CmpInstruction::genMachineCode
CmpInstruction::genMachineCode end
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
CmpInstruction::genMachineCode
CmpInstruction::genMachineCode end
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode7
LoadInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode7
LoadInstruction::genMachineCode end
CmpInstruction::genMachineCode
CmpInstruction::genMachineCode end
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
CmpInstruction::genMachineCode
CmpInstruction::genMachineCode end
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode7
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode7
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
CmpInstruction::genMachineCode
CmpInstruction::genMachineCode end
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode7
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode7
LoadInstruction::genMachineCode end
CallInstruction::genMachineCode
CallInstruction::genMachineCode int
CallInstruction::genMachineCode end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
CmpInstruction::genMachineCode
CmpInstruction::genMachineCode end
CondBrInstruction::genMachineCode
CondBrInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
if(opcode == MUL || opcode == DI
BinaryInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode7
LoadInstruction::genMachineCode end
CallInstruction::genMachineCode
CallInstruction::genMachineCode int
CallInstruction::genMachineCode end
LoadInstruction::genMachineCode
LoadInstruction::genMachineCode end
BinaryInstruction::genMachineCode
BinaryInstruction::genMachineCode end
StoreInstruction::genMachineCode
StoreInstruction::genMachineCode  end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
RetInstruction::genMachineCode
RetInstruction::genMachineCode end
UncondBrInstruction::genMachineCode
UncondBrInstruction::genMachineCode end
	.arch armv8-a
	.fpu vfpv3-d16
	.arch_extension crc
	.arm
	.text
	.global main
	.type main , %function
main:
	push {r6, r7, r8, r9, r10, fp, lr}
	mov fp, sp
BinaryMInstruction::output() 
	sub sp, sp, #548
.L36:
	ldr r10, =0
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =1
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =4
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =2
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =8
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =3
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =12
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =4
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =16
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =5
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =20
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =6
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =24
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =7
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =28
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =8
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =32
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =9
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =36
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =40
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =1
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =44
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =2
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =48
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =3
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =52
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =4
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =56
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =5
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =60
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =6
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =64
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =7
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =68
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =8
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =72
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =9
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =76
BinaryMInstruction::output() 
	add r9, r10, #-528
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =0
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =2
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =4
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =3
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =8
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =4
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =12
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =2
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =16
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =5
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =20
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =7
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =24
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =9
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =28
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =9
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =32
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =36
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =1
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =40
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =9
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =44
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =8
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =48
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =7
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =52
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =6
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =56
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =4
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =60
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =3
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =64
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =2
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =68
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =1
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =72
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =2
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =76
BinaryMInstruction::output() 
	add r9, r10, #-448
	ldr r10, =2
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =20
	str r10, [fp, #-368]
	ldr r10, =20
	str r10, [fp, #-364]
	ldr r10, =0
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =4
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =8
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =12
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =16
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =20
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =24
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =28
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =32
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =36
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =40
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =44
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =48
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =52
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =56
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =60
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =64
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =68
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =72
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =76
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =80
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =84
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =88
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =92
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =96
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =100
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =104
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =108
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =112
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =116
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =120
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =124
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =128
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =132
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =136
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =140
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =144
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =148
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =152
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =156
BinaryMInstruction::output() 
	add r9, r10, #-160
	ldr r10, =0
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, =0
	str r10, [fp, #-548]
	b .L129
.L129:
	ldr r10, [fp, #-548]
	ldr r9, [fp, #-368]
	cmp r10, r9
	movlt r10, #1
	movge r10, #0
	blt .L130
	b .L135
.L130:
	ldr r10, [fp, #-548]
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-528
BinaryMInstruction::output() 
	add r9, fp, r10
	ldr r10, [r9]
	ldr r9, [fp, #-548]
	ldr r8, =4
BinaryMInstruction::output() 
	mul r7, r9, r8
BinaryMInstruction::output() 
	add r9, r7, #-360
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, [fp, #-548]
BinaryMInstruction::output() 
	add r9, r10, #1
	str r9, [fp, #-548]
	b .L129
.L131:
	ldr r10, =0
	str r10, [fp, #-548]
	b .L145
.L134:
.L135:
	b .L131
.L136:
.L145:
	ldr r10, [fp, #-548]
	ldr r9, [fp, #-364]
	cmp r10, r9
	movlt r10, #1
	movge r10, #0
	blt .L146
	b .L151
.L146:
	ldr r10, [fp, #-548]
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-448
BinaryMInstruction::output() 
	add r9, fp, r10
	ldr r10, [r9]
	ldr r9, [fp, #-548]
	ldr r8, =4
BinaryMInstruction::output() 
	mul r7, r9, r8
BinaryMInstruction::output() 
	add r9, r7, #-260
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, [fp, #-548]
BinaryMInstruction::output() 
	add r9, r10, #1
	str r9, [fp, #-548]
	b .L145
.L147:
	ldr r10, [fp, #-368]
	ldr r9, [fp, #-364]
BinaryMInstruction::output() 
	add r8, r10, r9
BinaryMInstruction::output() 
	sub r10, r8, #1
	str r10, [fp, #-536]
	ldr r10, =0
	str r10, [fp, #-548]
	b .L163
.L150:
.L151:
	b .L147
.L152:
.L163:
	ldr r10, [fp, #-548]
	ldr r9, [fp, #-536]
	cmp r10, r9
	movle r10, #1
	movgt r10, #0
	ble .L164
	b .L169
.L164:
	ldr r10, [fp, #-548]
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-160
	ldr r9, =0
BinaryMInstruction::output() 
	add r8, fp, r10
	str r9, [r8]
	ldr r10, [fp, #-548]
BinaryMInstruction::output() 
	add r9, r10, #1
	str r9, [fp, #-548]
	b .L163
.L165:
	ldr r10, =0
	str r10, [fp, #-532]
	ldr r10, [fp, #-364]
BinaryMInstruction::output() 
	sub r9, r10, #1
	str r9, [fp, #-548]
	b .L176
.L168:
.L169:
	b .L165
.L170:
.L176:
	ldr r10, [fp, #-548]
	ldr r9, =-1
	cmp r10, r9
	movgt r10, #1
	movle r10, #0
	bgt .L177
	b .L181
.L177:
	ldr r10, [fp, #-548]
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-260
BinaryMInstruction::output() 
	add r9, fp, r10
	ldr r10, [r9]
	str r10, [fp, #-540]
	ldr r10, [fp, #-368]
BinaryMInstruction::output() 
	sub r9, r10, #1
	str r9, [fp, #-544]
	b .L188
.L178:
	ldr r10, =0
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-160
BinaryMInstruction::output() 
	add r9, fp, r10
	ldr r10, [r9]
	ldr r9, =0
	cmp r10, r9
	movne r10, #1
	moveq r10, #0
	bne .L232
	b .L238
.L180:
.L181:
	b .L178
.L182:
.L188:
	ldr r10, [fp, #-544]
	ldr r9, =-1
	cmp r10, r9
	movgt r10, #1
	movle r10, #0
	bgt .L189
	b .L193
.L189:
	ldr r10, [fp, #-536]
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-160
BinaryMInstruction::output() 
	add r9, fp, r10
	ldr r10, [r9]
	ldr r9, [fp, #-540]
	ldr r8, [fp, #-544]
	ldr r7, =4
BinaryMInstruction::output() 
	mul r6, r8, r7
BinaryMInstruction::output() 
	add r8, r6, #-360
BinaryMInstruction::output() 
	add r7, fp, r8
	ldr r8, [r7]
BinaryMInstruction::output() 
	mul r7, r9, r8
BinaryMInstruction::output() 
	add r9, r10, r7
	str r9, [fp, #-532]
	ldr r10, [fp, #-532]
	ldr r9, =10
	cmp r10, r9
	movge r10, #1
	movlt r10, #0
	bge .L204
	b .L209
.L190:
	ldr r10, [fp, #-536]
	ldr r9, [fp, #-368]
BinaryMInstruction::output() 
	add r8, r10, r9
BinaryMInstruction::output() 
	sub r10, r8, #1
	str r10, [fp, #-536]
	ldr r10, [fp, #-548]
BinaryMInstruction::output() 
	sub r9, r10, #1
	str r9, [fp, #-548]
	b .L176
.L192:
.L193:
	b .L190
.L194:
.L204:
	ldr r10, [fp, #-532]
	ldr r9, [fp, #-536]
	ldr r8, =4
BinaryMInstruction::output() 
	mul r7, r9, r8
BinaryMInstruction::output() 
	add r9, r7, #-160
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	ldr r10, [fp, #-536]
BinaryMInstruction::output() 
	sub r9, r10, #1
	ldr r10, =4
BinaryMInstruction::output() 
	mul r8, r9, r10
BinaryMInstruction::output() 
	add r10, r8, #-160
BinaryMInstruction::output() 
	add r9, fp, r10
	ldr r10, [r9]
	ldr r9, [fp, #-532]
	ldr r8, =10
BinaryMInstruction::output() 
	sdiv r7, r9, r8
BinaryMInstruction::output() 
	add r9, r10, r7
	ldr r10, [fp, #-536]
BinaryMInstruction::output() 
	sub r8, r10, #1
	ldr r10, =4
BinaryMInstruction::output() 
	mul r7, r8, r10
BinaryMInstruction::output() 
	add r10, r7, #-160
BinaryMInstruction::output() 
	add r8, fp, r10
	str r9, [r8]
	b .L205
.L205:
	ldr r10, [fp, #-544]
BinaryMInstruction::output() 
	sub r9, r10, #1
	str r9, [fp, #-544]
	ldr r10, [fp, #-536]
BinaryMInstruction::output() 
	sub r9, r10, #1
	str r9, [fp, #-536]
	b .L188
.L206:
	ldr r10, [fp, #-532]
	ldr r9, [fp, #-536]
	ldr r8, =4
BinaryMInstruction::output() 
	mul r7, r9, r8
BinaryMInstruction::output() 
	add r9, r7, #-160
BinaryMInstruction::output() 
	add r8, fp, r9
	str r10, [r8]
	b .L205
.L208:
.L209:
	b .L206
.L210:
.L232:
	ldr r10, =0
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-160
BinaryMInstruction::output() 
	add r9, fp, r10
	ldr r10, [r9]
	mov r0, r10
	bl  putint
	b .L233
.L233:
	ldr r10, =1
	str r10, [fp, #-548]
	b .L243
.L237:
.L238:
	b .L233
.L239:
.L243:
	ldr r10, [fp, #-548]
	ldr r9, [fp, #-368]
	ldr r8, [fp, #-364]
BinaryMInstruction::output() 
	add r7, r9, r8
BinaryMInstruction::output() 
	sub r9, r7, #1
	cmp r10, r9
	movle r10, #1
	movgt r10, #0
	ble .L244
	b .L250
.L244:
	ldr r10, [fp, #-548]
	ldr r9, =4
BinaryMInstruction::output() 
	mul r8, r10, r9
BinaryMInstruction::output() 
	add r10, r8, #-160
BinaryMInstruction::output() 
	add r9, fp, r10
	ldr r10, [r9]
	mov r0, r10
	bl  putint
	ldr r10, [fp, #-548]
BinaryMInstruction::output() 
	add r9, r10, #1
	str r9, [fp, #-548]
	b .L243
.L245:
	ldr r10, =0
	mov r0, r10
	b .Lmain_END
.L249:
.L250:
	b .L245
.L251:
.Lmain_END:
BinaryMInstruction::output() 
	add sp, sp, #548
	pop {r6, r7, r8, r9, r10, fp, lr}
	bx  lr

TOTAL: 0H-0M-0S-0us
