program
    Sequence
        FunctionDefine function name: ifElseIf, type: int()
            FuncDefParamsNode NULL
            CompoundStmt
                Sequence
                    Sequence
                        Sequence
                            Sequence
                                Sequence
                                    DeclStmt
                                    DefNode	Variable	NonArray
                                        Id	name: a	scope: 2	type: int
                                        null
                                    AssignStmt
                                        Id	name: a	scope: 2	type: int
                                        IntegerLiteral	value: 5	type: int
                                DeclStmt
                                DefNode	Variable	NonArray
                                    Id	name: b	scope: 2	type: int
                                    null
                            AssignStmt
                                Id	name: b	scope: 2	type: int
                                IntegerLiteral	value: 10	type: int
                        IfElseStmt
                            BinaryExpr	op: or
                                BinaryExpr	op: equal
                                    Id	name: a	scope: 2	type: int
                                    IntegerLiteral	value: 6	type: int
                                BinaryExpr	op: equal
                                    Id	name: b	scope: 2	type: int
                                    IntegerLiteral	value: 11	type: int
                            CompoundStmt
                                ReturnStmt
                                    Id	name: a	scope: 2	type: int
                            CompoundStmt
                                IfElseStmt
                                    BinaryExpr	op: and
                                        BinaryExpr	op: equal
                                            Id	name: b	scope: 2	type: int
                                            IntegerLiteral	value: 10	type: int
                                        BinaryExpr	op: equal
                                            Id	name: a	scope: 2	type: int
                                            IntegerLiteral	value: 1	type: int
                                    AssignStmt
                                        Id	name: a	scope: 2	type: int
                                        IntegerLiteral	value: 25	type: int
                                    IfElseStmt
                                        BinaryExpr	op: and
                                            BinaryExpr	op: equal
                                                Id	name: b	scope: 2	type: int
                                                IntegerLiteral	value: 10	type: int
                                            BinaryExpr	op: equal
                                                Id	name: a	scope: 2	type: int
                                                SingleExpr	op: sub
                                                    IntegerLiteral	value: 5	type: int
                                        AssignStmt
                                            Id	name: a	scope: 2	type: int
                                            BinaryExpr	op: add
                                                Id	name: a	scope: 2	type: int
                                                IntegerLiteral	value: 15	type: int
                                        AssignStmt
                                            Id	name: a	scope: 2	type: int
                                            SingleExpr	op: sub
                                                Id	name: a	scope: 2	type: int
                    ReturnStmt
                        Id	name: a	scope: 2	type: int
        FunctionDefine function name: main, type: int()
            FuncDefParamsNode NULL
            CompoundStmt
                Sequence
                    ExprStmtNode
                        FuncCallNode	funcName: putint	 funcType: void(int)	scope: 0
                            FuncCallParamsNode
                                FuncCallNode	funcName: ifElseIf	 funcType: int()	scope: 0
                                    FuncCallParamsNode NULL
                    ReturnStmt
                        IntegerLiteral	value: 0	type: int
